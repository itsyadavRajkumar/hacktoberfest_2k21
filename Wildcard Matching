Question: Wildcard Matching
-----------------------------------
Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:
'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).

 ---------------------------------------
Example 1:
Input: s = "aa", p = "a"
Output: false
Explanation: "a" does not match the entire string "aa".

let's code--------------------

class Solution {
public:
    bool isMatch(string s, string p) {
        int m = s.length();
        int n = p.length();
        
        bool dp[m+1][n+1];
        memset(dp,false,sizeof(dp));
        
        dp[0][0] = true;
        
        for(int j=1;j<n+1;j++){
            if(p[j-1]=='*')
                dp[0][j] = dp[0][j-1];
        }
        
        for(int i=1;i<m+1;i++){
            for(int j=1;j<n+1;j++){
                if(p[j-1]=='*')
                    dp[i][j] = dp[i][j-1] || dp[i-1][j];
                else if(p[j-1] == s[i-1] || p[j-1] == '?')
                    dp[i][j] = dp[i-1][j-1];
                else
                    dp[i][j] = false;
            }
        }
        
        return dp[m][n];
    }
};

